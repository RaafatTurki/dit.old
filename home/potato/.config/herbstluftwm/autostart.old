#!/usr/bin/env bash

# this is a simple config for herbstluftwm


hc() {
    herbstclient "$@"
}

hc emit_hook reload

# remove all existing keybindings
hc keyunbind --all
# ~/.config/herbstluftwm/startup

# keybindings
Mod=Mod4

# apps
hc keybind $Mod-Return spawn $TERMINAL
hc keybind $Mod-d spawn $LAUNCHER
hc keybind $Mod-e spawn $FM
# hv keybind $Mod-KP_Enter $FM trash:/// -n
hc keybind $Mod-l spawn $LOCKER
hc keybind Print spawn screenshot clip

hc keybind XF86AudioLowerVolume spawn pactl set-sink-volume @DEFAULT_SINK@ -10%
hc keybind XF86AudioRaiseVolume spawn pactl set-sink-volume @DEFAULT_SINK@ +10%
hc keybind XF86AudioMute spawn pactl set-sink-mute @DEFAULT_SINK@ toggle

hc keybind KP_Subtract spawn pactl set-sink-volume @DEFAULT_SINK@ -10%
hc keybind KP_Add spawn pactl set-sink-volume @DEFAULT_SINK@ +10%
# hc keybind XF86Tools spawn "$TERM_EMU -e ncmpcpp"
hc keybind KP_Enter spawn mpc toggle


# HERBSLUFT
hc keybind $Mod-Shift-r reload
hc keybind $Mod-q close
# hc keybind $Mod-Shift-c close
# hc keybind $Mod-Shift-q quit

# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right

# moving clients in tiling and floating mode
# hc keybind $Mod-Shift-Left  shift left
# hc keybind $Mod-Shift-Down  shift down
# hc keybind $Mod-Shift-Up    shift up
# hc keybind $Mod-Shift-Right shift right

# cycle through tags
hc keybind $Mod-Shift-Left use_index -1 --skip-visible
hc keybind $Mod-Shift-Right use_index +1 --skip-visible

# splitting frames
# create an empty frame at the specified direction
# hc keybind $Mod-u       split   bottom  0.5
# hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
# hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..5} )
tag_keys=( {1..5} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# layouting
hc keybind $Mod-r remove
# hc keybind $Mod-w floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-w set_attr clients.focus.floating toggle


# minimizing
# hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
# hc keybind $Mod-Ctrl-m foreach CLIENT clients. \
#      sprintf MINATT "%c.minimized" CLIENT \
#      sprintf TAGATT "%c.tag" CLIENT and \
#        , compare MINATT "=" "true" \
#        , substitute FOCUS "tags.focus.name" compare TAGATT "=" FOCUS \
#        , set_attr MINATT false

hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space or , and . compare tags.focus.curframe_wcount = 2 \
    . cycle_layout +1 vertical horizontal max vertical grid \
    , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
# hc keybind $Mod-BackSpace   cycle_monitor
# hc keybind $Mod-Tab         cycle_all +1
# hc keybind $Mod-Shift-Tab   cycle_all -1
# hc keybind $Mod-c cycle
# hc keybind $Mod-i jumpto urgent


# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

hc set frame_transparent_width 0
# hc set frame_border_active_color '#000000'
# hc set frame_border_normal_color '#000000'
# hc set frame_bg_normal_color '#000000'
# hc set frame_bg_active_color '#FF0000'
# hc set frame_border_width 1
# hc set always_show_frame on
# hc set frame_bg_transparent on
# hc set frame_gap 4

# hc attr theme.title_height 14
# hc attr theme.padding_top 4
# hc attr theme.title_font 'Terminus:size=10'  # example using Xft
hc attr theme.title_height 0
hc attr theme.padding_top 0

hc attr theme.active.color "`xgetres col.sel`"
hc attr theme.normal.color "`xgetres col.mg`"
hc attr theme.urgent.color "`xgetres col.fg`"


hc attr theme.inner_width 0
# hc attr theme.inner_color red

# "`xgetres col.sel`"
hc attr theme.border_width 1
# hc attr theme.floating.border_width 1
# hc attr theme.floating.outer_width 1
# hc attr theme.floating.outer_color black
# hc attr theme.active.inner_color '#3E4A00'
# hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color "`xgetres col.mg`"

hc set window_gap 5
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
# hc detect_monitors

# find the panel
# panel=~/.config/herbstluftwm/panel.sh
# [ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
# for monitor in $(hc list_monitors | cut -d: -f1) ; do
#     # start it on each monitor
#     "$panel" "$monitor" &
# done
